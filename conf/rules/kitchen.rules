import org.openhab.core.library.types.*

var PercentType civilDuskLevel = new PercentType(25)
var PercentType nauticalDuskLevel = new PercentType(50)
var PercentType astroDuskLevel = new PercentType (100)

rule "Civl Dusk Triggered"
when 
    Channel 'astro:sun:local:civilDusk#event' triggered START
then
    logInfo("Kitchen", "Civil dusk rule triggered!")
    logInfo("Kitchen", "Setting lights to {}%", civilDuskLevel)
    
    sendCommand(LifxKitchen1_Brightness, civilDuskLevel)
    sendCommand(LifxKitchen2_Brightness, civilDuskLevel)
end

rule "Nautical Dusk Triggered"
when 
    Channel 'astro:sun:local:nauticalDusk#event' triggered START
then
    logInfo("Kitchen", "Nautical dusk rule triggered!")
    logInfo("Kitchen", "Setting lights to {}%", nauticalDuskLevel)
    
    sendCommand(LifxKitchen1_Brightness, nauticalDuskLevel)
    sendCommand(LifxKitchen2_Brightness, nauticalDuskLevel)
end

rule "Astro Dusk Triggered"
when 
    Channel 'astro:sun:local:astroDusk#event' triggered START
then
    logInfo("Kitchen", "Astro dusk rule triggered!")
    logInfo("Kitchen", "Setting lights to {}%", astroDuskLevel)
    
    sendCommand(LifxKitchen1_Brightness, astroDuskLevel)
    sendCommand(LifxKitchen2_Brightness, astroDuskLevel)
end

rule "Dimming lights at night"
when
    Time cron "0 09-59 22 1/1 * ? *"
then
    logInfo("Kitchen", "Dimming lights late at night triggered!")

    var int currentLevel1 = (LifxKitchen1_Brightness.state as DecimalType).intValue
    var int currentLevel2 = (LifxKitchen2_Brightness.state as DecimalType).intValue
    var off = new PercentType(0)

    if (currentLevel1 > 0) {
        var newLevel = if (currentLevel1 > 2) new PercentType(currentLevel1 - 2) else off
        logInfo("Kitchen", "Setting KitchenLight1 to {}%", newLevel) 
        sendCommand(LifxKitchen1_Brightness, newLevel)
    } else {
        logInfo("Kitchen", "Skip dimming KitchenLight1 since it is already off")
    }

    if (currentLevel2 > 0) {
        var newLevel = if (currentLevel2 > 2) new PercentType (currentLevel2 - 2) else off
        logInfo("Kitchen", "Setting KitchenLight2 to {}%", newLevel) 
        sendCommand(LifxKitchen2_Brightness, newLevel)
    } else {
        logInfo("Kitchen", "Skip dimming KitchenLight2 since it is already off")
    }
end
